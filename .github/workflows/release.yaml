name: Manual Tag Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+.post[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+[a-b][0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"

jobs:
  build:
    name: Build the source tarball and the wheel
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build tool
        run: |
          pip install --upgrade pip
          pip install build

      - name: Build the packages
        run: python -m build

      - name: Archive packages
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  publish:
    runs-on: ubuntu-latest
    needs: [build] 
    steps:
      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      # If the tag includes "rc", assume it's a prerelease => push to Test PyPI:
      - name: Publish to Test PyPI
        if: contains(github.ref_name, 'rc')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: "__token__"
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: "https://test.pypi.org/legacy/"

      # Otherwise, push to real PyPI:
      - name: Publish to PyPI
        if: "! contains(github.ref_name, 'rc')"
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: "__token__"
          password: ${{ secrets.PYPI_TOKEN }}
          # The default repository is https://upload.pypi.org/legacy/

  release:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write   # needed to create releases
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      # Create or update a GitHub Release with the same name as your tag:
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          # if you want a pre-release on GitHub for RC tags:
          prerelease: ${{ contains(github.ref_name, 'rc') }}
          # body: "Your custom release notes here"
