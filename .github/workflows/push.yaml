name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'  # For example, v1.0.0 or v0.9.2

jobs:
  build_and_release:
    permissions:
      contents: write  # Needed for creating releases
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Build (example)
        run: echo "Do your build or packaging here"

      - name: Extract release notes
        id: extract_notes
        run: |
          VERSION="${GITHUB_REF_NAME}"
          # From '## v0.1.1' ignoring trailing spaces to next '## ' or EOF
          sed -n "/^##[[:space:]]\+$VERSION[[:space:]]*$/,/^## /p" CHANGELOG.md > extracted_notes.txt \
            || true

          # If you want to skip the version line itself:
          sed -i '1d' extracted_notes.txt

          # Remove any heading lines
          sed -i '/^## /d' extracted_notes.txt

          echo "--- Extracted release notes for $VERSION ---"
          cat extracted_notes.txt
          echo "-------------------------------------------"
          echo "::set-output name=notes::$(cat extracted_notes.txt | sed 's/%/%25/g; s/\r/%0D/g; s/\n/%0A/g')"

      - name: Debug final release body (optional)
        run: |
          echo "Below is the content that will appear in the release body:"
          echo "${{ steps.extract_notes.outputs.notes }}"

      - name: Create GitHub Release
        uses: actions/create-release@v1.1.4
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: ${{ steps.extract_notes.outputs.notes }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
